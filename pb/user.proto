syntax = "proto3";
package pb;

service UserService {
	rpc ListUsers(UserRequest) returns (Users);
	rpc CreateUserWithPhone(User) returns (User);
}

message UserRequest {
	string id = 1;
	repeated string ids = 2;
	repeated string not_ids = 5;

	string anchor = 3;
	int32 limit = 4;
	string fullname = 7;
	string username = 6;
	string email = 8;
	string phone = 10;
	repeated string phones = 11;
	string state = 12;
	string idtoken = 16;
	string app = 18;
	string alias_id = 19;
	int32 skip = 20;

}
message Users {
	repeated User users =1;
	string anchor = 2;
	int32 total = 3;
}
message User {
	// @inject_tag: gorm:"primaryKey"
	string id = 1;
	// @inject_tag: gorm:"uniqueIndex"
	string username = 2;
	// @inject_tag: gorm:"text"
	string avatar = 3;
	string fullname = 5;
	// @inject_tag: gorm:"index"
	string phone = 6;
	string province = 8; // province or city
	string district = 9; // quận - huyện
	string ward = 10; // phường
	string street = 11; // đường
	string email = 12;
	string state = 13;
	enum State {
		active = 0;
		banned = 1;
	}
	int64 updated_at = 14;
	int64 birth = 15;
	int64 created = 16;
	string full_address = 17;
	string gender = 20; // app cu 1 nam 2 nữ
	enum Gender {
		male = 0;
		female = 1;
		other = 2;
	}
	string language = 21;
	enum Language {
		vi = 0;
		en = 1;
	}
	string identity_card = 22; // chưng minh thư nhân dân
	string password =24; // using with email | username
	float long = 28;
	float lat = 29;
	int64 last_change_password = 30;
	int64 mpoint_id = 31;
	int32 valid_phone = 32;
	int32 valid_email = 33;
}

message Partners {
    repeated Partner partners = 1;
    string anchor = 2;
    int32 total = 3;
}


message PartnerRequest {
    string id = 2;
    string name = 3;
    string state = 5;
    string anchor = 6;
    int32 limit = 7;
    int64 from = 8;
    int64 to = 9;
    repeated string alt_ids = 10;
    repeated string ids = 11;
    repeated string not_ids = 12;
}
message Partner {
    // @inject_tag: gorm:"primaryKey"
    string id = 1;
    string alt_id = 2;
    string name = 3;
    string address = 4;
    string phone = 5; // customer's service phone
    string slogan = 6;
    string description = 7;
    string logo = 8;
    // repeated string images = 10;
    string contact_name = 11;
    string contact_phone = 12;
    string websites = 13;
    string state = 14;
    enum State {
        pending = 0;
        active = 1;
        baned = 2;
    }
}

message Category {
    string id = 2; // not generate
    string name = 3;
    // `xorm:"text"`
    string logo = 5;
    string parent_id = 6; // nested menu
    // `xorm:"-"`
    Category parent = 7;
    int32 index = 8; // number to order in app
	int64 created = 9;
	int64 updated_at = 10;
	string type = 13;
	int64 alt_id = 50;
	string partner_id = 14;
}


message ProductType {
	// @inject_tag: gorm:"primaryKey"
	string id = 1;
	string name = 2;
	string sub_category_id = 20;
	string category_id = 7;
	// @inject_tag: gorm:"-"
	Category category = 37;
	string description = 4;
	// // @inject_tag: gorm:"text[]"
	// repeated string images = 5;
	string state = 6;
	enum State {
		active = 0;
		inactive = 1;
	}
	string thumbnail = 8;
	int64 start_date = 11;
	int64 end_date = 12;
	int64 origin_price = 18;
	int32 weight = 22;
	string tags = 24;
	int64 payment_cash = 26; // cash
	int64 payment_point = 27; // point
	string payment = 28;
	string shipping_method = 9;
	enum Shipping {
		shipping = 0;
		in_place = 1;
	}
	string unit = 30;
	string store_id = 29;
	string source =32;
	int64 created = 33;
	int64 updated_at = 34;
	// @inject_tag: gorm:"json"
	map<string, string> attribute_values = 35;
	string partner_id = 38;
	int64 alt_id =39;
}